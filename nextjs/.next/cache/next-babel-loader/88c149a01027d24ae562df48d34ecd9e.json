{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n\nclass indexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n  }\n\n  // life cycle hook- get initial props\n  static getInitialProps(context) {\n    console.log(context);\n    const promise = new Promise((resolve, reject) => {\n      resolve({\n        appName: 'Super App'\n      });\n      setTimeout(() => {}, 1000);\n    });\n    promise.then();\n    return promise;\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"The Main Page of \", this.props.appName), __jsx(\"p\", null, \"Go to \", __jsx(Link, {\n      href: \"/auth\"\n    }, __jsx(\"a\", null, \"Auth\"))), __jsx(\"button\", {\n      onClick: () => {\n        Router.push('/auth');\n      }\n    }, \"Auth Button\"));\n  }\n\n}\n\nexport default indexPage;","map":null,"metadata":{},"sourceType":"module"}